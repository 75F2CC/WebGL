<?xml version="1.0"?>
<Data>
  <Table Id="Operators">
    <Row Description="Plus">
      <Parameter Name="Operator">
<![CDATA[+]]>
      </Parameter>
    </Row>
    <Row Description="Minus">
      <Parameter Name="Operator">
<![CDATA[-]]>
      </Parameter>
    </Row>
    <Row Description="Multiply">
      <Parameter Name="Operator">
<![CDATA[*]]>
      </Parameter>
    </Row>
    <Row Description="Divide">
      <Parameter Name="Operator">
<![CDATA[/]]>
      </Parameter>
    </Row>
  </Table>
  <Table Id="BasicExpressions">
    <Row Description="Two integer variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo;
  int bar;
  int result;
  result = foo %s bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  int var_1_2=0;
  var_1_2=var_1_0 %s var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo;
  int bar;
  int result;
  result = foo %s bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  int var_1_2=0;
  var_1_2=var_1_0 %s var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two integer variables (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo[5];
  int bar[5];
  int result;
  result = foo[0] %s bar[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0[5]=(int[5])0;
  int var_1_1[5]=(int[5])0;
  int var_1_2=0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo[5];
  int bar[5];
  int result;
  result = foo[0] %s bar[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0[5]=(int[5])0;
  int var_1_1[5]=(int[5])0;
  int var_1_2=0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two float variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo;
  float bar;
  float result;
  result = foo %s bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  float var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo;
  float bar;
  float result;
  result = foo %s bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  float var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two float variables (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo[5];
  float bar[5];
  float result;
  result = foo[0] %s bar[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0[5]=(float[5])0;
  float var_1_1[5]=(float[5])0;
  float var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo[5];
  float bar[5];
  float result;
  result = foo[0] %s bar[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0[5]=(float[5])0;
  float var_1_1[5]=(float[5])0;
  float var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec2 variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo;
  vec2 bar;
  vec2 result;
  result = foo %s bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  float2 var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo;
  vec2 bar;
  vec2 result;
  result = foo %s bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  float2 var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec2 variables (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo[5];
  vec2 bar[5];
  vec2 result;
  result = foo[0] %s bar[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  float2 var_1_1[5]=(float2[5])0;
  float2 var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo[5];
  vec2 bar[5];
  vec2 result;
  result = foo[0] %s bar[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  float2 var_1_1[5]=(float2[5])0;
  float2 var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec3 variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo;
  vec3 bar;
  vec3 result;
  result = foo %s bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  float3 var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo;
  vec3 bar;
  vec3 result;
  result = foo %s bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  float3 var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec3 variables (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo[5];
  vec3 bar[5];
  vec3 result;
  result = foo[0] %s bar[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  float3 var_1_1[5]=(float3[5])0;
  float3 var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo[5];
  vec3 bar[5];
  vec3 result;
  result = foo[0] %s bar[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  float3 var_1_1[5]=(float3[5])0;
  float3 var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec4 variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo;
  vec4 bar;
  vec4 result;
  result = foo %s bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  float4 var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo;
  vec4 bar;
  vec4 result;
  result = foo %s bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  float4 var_1_2=0.0;
  var_1_2=var_1_0 %s var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec4 variables (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo[5];
  vec4 bar[5];
  vec4 result;
  result = foo[0] %s bar[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  float4 var_1_1[5]=(float4[5])0;
  float4 var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo[5];
  vec4 bar[5];
  vec4 result;
  result = foo[0] %s bar[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  float4 var_1_1[5]=(float4[5])0;
  float4 var_1_2=0.0;
  var_1_2=var_1_0[0] %s var_1_1[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>

    <Row Description="Two integer literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int result;
  result = 1 %s 2;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  var_1_0=1 %s 2;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int result;
  result = 1 %s 2;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  var_1_0=1 %s 2;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two integer literal addition (array initalizer)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int result[1 + 1];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0[2]=(int[2])0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int result[1 + 1];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0[2]=(int[2])0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two integer literal subtraction (array initalizer)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int result[2 - 1];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0[1]=(int[1])0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int result[2 - 1];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0[1]=(int[1])0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two integer literal multiplication (array initalizer)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int result[1 * 1];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0[1]=(int[1])0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int result[1 * 1];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0[1]=(int[1])0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two float literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float result;
  result = 1.0 %s 2.0;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  var_1_0=1.000000e+000 %s 2.000000e+000;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float result;
  result = 1.0 %s 2.0;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  var_1_0=1.000000e+000 %s 2.000000e+000;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec2 literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 result;
  result = vec2(1,1) %s vec2(2,2);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  var_1_0=float2(1,1) %s float2(2,2);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 result;
  result = vec2(1,1) %s vec2(2,2);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  var_1_0=float2(1,1) %s float2(2,2);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec3 literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 result;
  result = vec3(1,1,1) %s vec3(2,2,2);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  var_1_0=float3(1,1,1) %s float3(2,2,2);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 result;
  result = vec3(1,1,1) %s vec3(2,2,2);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  var_1_0=float3(1,1,1) %s float3(2,2,2);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec4 literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 result;
  result = vec4(1,1,1,1) %s vec4(2,2,2,2);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  var_1_0=float4(1,1,1,1) %s float4(2,2,2,2);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 result;
  result = vec4(1,1,1,1) %s vec4(2,2,2,2);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  var_1_0=float4(1,1,1,1) %s float4(2,2,2,2);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo;
  int result;
  result = 1 %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=1 %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo;
  int result;
  result = 1 %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=1 %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and variable (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo[5];
  int result;
  result = 1 %s foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0[5]=(int[5])0;
  int var_1_1=0;
  var_1_1=1 %s var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo[5];
  int result;
  result = 1 %s foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0[5]=(int[5])0;
  int var_1_1=0;
  var_1_1=1 %s var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo;
  float result;
  result = 1.0 %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=1.000000e+000 %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo;
  float result;
  result = 1.0 %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=1.000000e+000 %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and variable (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo[5];
  float result;
  result = 1.0 %s foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0[5]=(float[5])0;
  float var_1_1=0.0;
  var_1_1=1.000000e+000 %s var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo[5];
  float result;
  result = 1.0 %s foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0[5]=(float[5])0;
  float var_1_1=0.0;
  var_1_1=1.000000e+000 %s var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Vec2 literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo;
  vec2 result;
  result = vec2(1,1) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=float2(1,1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo;
  vec2 result;
  result = vec2(1,1) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=float2(1,1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Vec2 literal and variable (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo[5];
  vec2 result;
  result = vec2(1,1) %s foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  float2 var_1_1=0.0;
  var_1_1=float2(1,1) %s var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo[5];
  vec2 result;
  result = vec2(1,1) %s foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  float2 var_1_1=0.0;
  var_1_1=float2(1,1) %s var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec3 literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo;
  vec3 result;
  result = vec3(1,1,1) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=float3(1,1,1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo;
  vec3 result;
  result = vec3(1,1,1) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=float3(1,1,1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec3 literal and variable (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo[5];
  vec3 result;
  result = vec3(1,1,1) %s foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  float3 var_1_1=0.0;
  var_1_1=float3(1,1,1) %s var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo[5];
  vec3 result;
  result = vec3(1,1,1) %s foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  float3 var_1_1=0.0;
  var_1_1=float3(1,1,1) %s var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec4 literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo;
  vec4 result;
  result = vec4(1,1,1,1) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=float4(1,1,1,1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo;
  vec4 result;
  result = vec4(1,1,1,1) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=float4(1,1,1,1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec4 literal and variable (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo[5];
  vec4 result;
  result = vec4(1,1,1,1) %s foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  float4 var_1_1=0.0;
  var_1_1=float4(1,1,1,1) %s var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo[5];
  vec4 result;
  result = vec4(1,1,1,1) %s foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  float4 var_1_1=0.0;
  var_1_1=float4(1,1,1,1) %s var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo;
  int result;
  result = foo %s 1;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=var_1_0 %s 1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo;
  int result;
  result = foo %s 1;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=var_1_0 %s 1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo;
  float result;
  result = foo %s 1.0;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=var_1_0 %s 1.000000e+000;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo;
  float result;
  result = foo %s 1.0;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=var_1_0 %s 1.000000e+000;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Vec2 variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo;
  vec2 result;
  result = foo %s vec2(1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=var_1_0 %s float2(1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo;
  vec2 result;
  result = foo %s vec2(1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=var_1_0 %s float2(1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec3 variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo;
  vec3 result;
  result = foo %s vec3(1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=var_1_0 %s float3(1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo;
  vec3 result;
  result = foo %s vec3(1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=var_1_0 %s float3(1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec4 variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo;
  vec4 result;
  result = foo %s vec4(1,1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=var_1_0 %s float4(1,1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo;
  vec4 result;
  result = foo %s vec4(1,1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=var_1_0 %s float4(1,1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and literal (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo[5];
  int result;
  result = foo[0] %s 1;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0[5]=(int[5])0;
  int var_1_1=0;
  var_1_1=var_1_0[0] %s 1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo[5];
  int result;
  result = foo[0] %s 1;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0[5]=(int[5])0;
  int var_1_1=0;
  var_1_1=var_1_0[0] %s 1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and literal (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo[5];
  float result;
  result = foo[0] %s 1.0;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0[5]=(float[5])0;
  float var_1_1=0.0;
  var_1_1=var_1_0[0] %s 1.000000e+000;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo[5];
  float result;
  result = foo[0] %s 1.0;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0[5]=(float[5])0;
  float var_1_1=0.0;
  var_1_1=var_1_0[0] %s 1.000000e+000;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Vec2 variable and literal (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo[5];
  vec2 result;
  result = foo[0] %s vec2(1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  float2 var_1_1=0.0;
  var_1_1=var_1_0[0] %s float2(1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo[5];
  vec2 result;
  result = foo[0] %s vec2(1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  float2 var_1_1=0.0;
  var_1_1=var_1_0[0] %s float2(1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec3 variable and literal (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo[5];
  vec3 result;
  result = foo[0] %s vec3(1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  float3 var_1_1=0.0;
  var_1_1=var_1_0[0] %s float3(1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo[5];
  vec3 result;
  result = foo[0] %s vec3(1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  float3 var_1_1=0.0;
  var_1_1=var_1_0[0] %s float3(1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec4 variable and literal (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo[5];
  vec4 result;
  result = foo[0] %s vec4(1,1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  float4 var_1_1=0.0;
  var_1_1=var_1_0[0] %s float4(1,1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo[5];
  vec4 result;
  result = foo[0] %s vec4(1,1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  float4 var_1_1=0.0;
  var_1_1=var_1_0[0] %s float4(1,1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
  </Table>
  <Table Id="ScalarExpressions">
    <Row Description="Integer literal and ivec2 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  ivec2 foo = ivec2(1,1);
  ivec2 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  ivec2 foo = ivec2(1.0,1.0);
  ivec2 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and ivec3 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  ivec3 foo = ivec3(1.0, 1.0, 1.0);
  ivec3 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  ivec3 foo = ivec3(1.0, 1.0, 1.0);
  ivec3 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and ivec3 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  ivec3 foo = ivec3(1, 1, 1, 1);
  ivec3 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo = vec4(1, 1, 1, 1);
  vec4 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and mat2 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and mat3 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and mat4 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and ivec2 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  ivec2 foo = ivec2(1,1);
  ivec2 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  int var_1_2 = 2;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  ivec2 foo = ivec2(1,1);
  ivec2 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  int var_1_2 = 2;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and ivec3 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  ivec3 foo = ivec3(1, 1, 1);
  ivec3 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  int var_1_2 = 2;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  ivec3 foo = ivec3(1, 1, 1);
  ivec3 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  int var_1_2 = 2;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and ivec4 multiply (blocked by 91795)" Ignore="true" Bug="BLUE#91795">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  ivec4 foo = ivec4(1.0, 1.0, 1.0, 1.0);
  ivec4 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  int var_1_2 = 2;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  ivec4 foo = ivec4(1.0, 1.0, 1.0, 1.0);
  ivec4 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  int var_1_2 = 2;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec4 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat4 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2.0 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2.0 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    
    <Row Description="Float literal and vec2 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo[5];
  foo[0] = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  var_1_0[0] = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo[5];
  foo[0] = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  var_1_0[0] = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec3 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo[5];
  foo[0] = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  var_1_0[0] = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo[5];
  foo[0] = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  var_1_0[0] = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec4 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo[5];
  foo[0] = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  var_1_0[0] = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo[5];
  foo[0] = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  var_1_0[0] = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat2 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo[5];
  foo[0] = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0[5]=(float2x2[5])0;
  var_1_0[0] = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo[5];
  foo[0] = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0[5]=(float2x2[5])0;
  var_1_0[0] = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat3 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo[5];
  foo[0] = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0[5]=(float3x3[5])0;
  var_1_0[0] = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo[5];
  foo[0] = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0[5]=(float3x3[5])0;
  var_1_0[0] = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat4 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo[5];
  foo[0] = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2.0 * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0[5]=(float4x4[5])0;
  var_1_0[0] = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo[5];
  foo[0] = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2.0 * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0[5]=(float4x4[5])0;
  var_1_0[0] = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2.000000e+000 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    
    
    <Row Description="Float variable and vec2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  float bar = 2.0;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  float bar = 2.0;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and vec3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  float bar = 2.0;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  float bar = 2.000000e+000;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and vec4 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  float bar = 2.0;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  float bar = 2.0;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  float bar = 2.0;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  float bar = 2.0;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  float bar = 2.0;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  float bar = 2.0;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat4 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  float bar = 2.0;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  float bar = 2.0;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    
    <Row Description="Float variable and vec2 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo[5];
  foo[0] = vec2(1.0,1.0);
  vec2 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  var_1_0[0] = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo[5];
  foo[0] = vec2(1.0,1.0);
  vec2 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  var_1_0[0] = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and vec3 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo[5];
  foo[0] = vec3(1.0, 1.0, 1.0);
  vec3 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  var_1_0[0] = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo[5];
  foo[0] = vec3(1.0, 1.0, 1.0);
  vec3 result;
  float bar = 2.000000e+000;
  result = bar * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  var_1_0[0] = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and vec4 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo[5];
  foo[0] = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  var_1_0[0] = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo[5];
  foo[0] = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  var_1_0[0] = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat2 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo[5];
  foo[0] = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0[5]=(float2x2[5])0;
  var_1_0[0] = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo[5];
  foo[0] = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0[5]=(float2x2[5])0;
  var_1_0[0] = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat3 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo[5];
  foo[0] = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0[5]=(float3x3[5])0;
  var_1_0[0] = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo[5];
  foo[0] = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0[5]=(float3x3[5])0;
  var_1_0[0] = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat4 multiply (array)">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo[5];
  foo[0] = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0[5]=(float4x4[5])0;
  var_1_0[0] = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo[5];
  foo[0] = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  float bar = 2.0;
  result = bar * foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0[5]=(float4x4[5])0;
  var_1_0[0] = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 * var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    
    <Row Description="Float literal and vec2 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec3 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec4 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat2 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat3 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat4 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2.0 / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2.0 / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and vec2 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  float bar = 2.0;
  result = bar / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  float bar = 2.0;
  result = bar / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0 = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and vec3 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  float bar = 2.0;
  result = bar / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  float bar = 2.000000e+000;
  result = bar / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0 = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and vec4 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  float bar = 2.0;
  result = bar / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  float bar = 2.0;
  result = bar / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0 = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat2 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  float bar = 2.0;
  result = bar / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  float bar = 2.0;
  result = bar / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0 = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat3 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  float bar = 2.0;
  result = bar / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  float bar = 2.0;
  result = bar / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0 = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and mat4 divide (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  float bar = 2.0;
  result = bar / foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  float bar = 2.0;
  result = bar / foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0 = float4x4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4x4 var_1_1=0.0;
  float var_1_2 = 2.000000e+000;
  var_1_1= var_1_2 / var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>

    <Row Description="Float literal and vec2 divide (array) (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo[5];
  foo[0] = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 / foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  var_1_0[0] = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo[5];
  foo[0] = vec2(1.0,1.0);
  vec2 result;
  result = 2.0 / foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0[5]=(float2[5])0;
  var_1_0[0] = float2(1.000000e+000, 1.000000e+000);
  float2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec3 divide (array) (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo[5];
  foo[0] = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 / foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  var_1_0[0] = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo[5];
  foo[0] = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2.0 / foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0[5]=(float3[5])0;
  var_1_0[0] = float3(1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and vec4 divide (array) (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo[5];
  foo[0] = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 / foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  var_1_0[0] = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo[5];
  foo[0] = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  result = 2.0 / foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0[5]=(float4[5])0;
  var_1_0[0] = float4(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float4 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat2 divide (array) (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo[5];
  foo[0] = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 / foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0[5]=(float2x2[5])0;
  var_1_0[0] = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo[5];
  foo[0] = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2.0 / foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0[5]=(float2x2[5])0;
  var_1_0[0] = float2x2(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float2x2 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and mat3 divide (array) (Blocked on 114452)" Ignore="true" Bug="BLUE#114452">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo[5];
  foo[0] = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 / foo[0];
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0[5]=(float3x3[5])0;
  var_1_0[0] = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo[5];
  foo[0] = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2.0 / foo[0];
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0[5]=(float3x3[5])0;
  var_1_0[0] = float3x3(1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000, 1.000000e+000);
  float3x3 var_1_1=0.0;
  var_1_1= 2.000000e+000 / var_1_0[0];
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
  </Table>
  <Table Id="MatrixExpressions">
    <Row Description="Addition mat2 and mat2">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo + bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=var_1_0 + var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo + bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=var_1_0 + var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Subtraction mat2 and mat2">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo - bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=var_1_0 - var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo - bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=var_1_0 - var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Multiplication mat2 and mat2">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo * bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=mul(var_1_1,var_1_0);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo * bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=mul(var_1_1,var_1_0);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Division mat2 and mat2">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo / bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=var_1_0/var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo;
  mat2 bar;
  mat2 result;
  result = foo / bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2x2 var_1_0=0.0;
  float2x2 var_1_1=0.0;
  float2x2 var_1_2=0.0;
  var_1_2=var_1_0/var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Addition mat3 and mat3">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo + bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=var_1_0 + var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo + bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=var_1_0 + var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Subtraction mat3 and mat3">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo - bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=var_1_0 - var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo - bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=var_1_0 - var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Multiplication mat3 and mat3">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo * bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=mul(var_1_1,var_1_0);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo * bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=mul(var_1_1,var_1_0);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Division mat3 and mat3">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo / bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=var_1_0/var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo;
  mat3 bar;
  mat3 result;
  result = foo / bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3x3 var_1_0=0.0;
  float3x3 var_1_1=0.0;
  float3x3 var_1_2=0.0;
  var_1_2=var_1_0/var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Addition mat4 and mat4">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo + bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=var_1_0 + var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo + bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=var_1_0 + var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Subtraction mat4 and mat4">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo - bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=var_1_0 - var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo - bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=var_1_0 - var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Multiplication mat4 and mat4">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo * bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=mul(var_1_1,var_1_0);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo * bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=mul(var_1_1,var_1_0);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Division mat4 and mat4">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo / bar;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=var_1_0/var_1_1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo;
  mat4 bar;
  mat4 result;
  result = foo / bar;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4x4 var_1_0=0.0;
  float4x4 var_1_1=0.0;
  float4x4 var_1_2=0.0;
  var_1_2=var_1_0/var_1_1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
  </Table>
  <Table Id="InvalidExpressions">
    <Row Description="Integer literal and vec2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo = vec2(1,1);
  vec2 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo = vec2(1.0,1.0);
  vec2 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and vec3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo = vec3(1.0, 1.0, 1.0);
  vec3 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and vec3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo = vec3(1, 1, 1, 1);
  vec3 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo = vec4(1, 1, 1, 1);
  vec4 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and mat2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and mat3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and mat4 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2 * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  result = 2 * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and vec2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo = vec2(1,1);
  vec2 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo = vec2(1,1);
  vec2 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and vec3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo = vec3(1, 1, 1);
  vec3 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo = vec3(1, 1, 1);
  vec3 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and vec4 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo = vec4(1.0, 1.0, 1.0, 1.0);
  vec4 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and mat2 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat2 foo = mat2(1.0, 1.0, 1.0, 1.0);
  mat2 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and mat3 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat3 foo = mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat3 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and mat4 multiply">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  int bar = 2;
  result = bar * foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  mat4 foo = mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
  mat4 result;
  int bar = 2;
  result = bar * foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
    </Row>
  </Table>
  <Table Id="ParenthesisExpressions">
    <Row Description="Two integer variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo;
  int bar;
  int result;
  result = (foo %s bar) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  int var_1_2=0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo;
  int bar;
  int result;
  result = (foo %s bar) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  int var_1_2=0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two float variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo;
  float bar;
  float result;
  result = (foo %s bar) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  float var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo;
  float bar;
  float result;
  result = (foo %s bar) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  float var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec2 variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo;
  vec2 bar;
  vec2 result;
  result = (foo %s bar) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  float2 var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo;
  vec2 bar;
  vec2 result;
  result = (foo %s bar) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  float2 var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec3 variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo;
  vec3 bar;
  vec3 result;
  result = (foo %s bar) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  float3 var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo;
  vec3 bar;
  vec3 result;
  result = (foo %s bar) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  float3 var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec4 variables">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo;
  vec4 bar;
  vec4 result;
  result = (foo %s bar) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  float4 var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo;
  vec4 bar;
  vec4 result;
  result = (foo %s bar) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  float4 var_1_2=0.0;
  var_1_2=(var_1_0 %s var_1_1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>

    <Row Description="Two integer literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int result;
  result = (1 %s 2) %s 1;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  var_1_0=(1 %s 2) %s 1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int result;
  result = (1 %s 2) %s 1;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  var_1_0=(1 %s 2) %s 1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two float literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float result;
  result = (1.0 %s 2.0) %s 1.0;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  var_1_0=(1.000000e+000 %s 2.000000e+000) %s 1.000000e+000;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float result;
  result = (1.0 %s 2.0) %s 1.0;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  var_1_0=(1.000000e+000 %s 2.000000e+000) %s 1.000000e+000;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec2 literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 result;
  result = (vec2(1,1) %s vec2(2,2)) %s vec2(1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  var_1_0=(float2(1,1) %s float2(2,2)) %s float2(1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 result;
  result = (vec2(1,1) %s vec2(2,2)) %s vec2(1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  var_1_0=(float2(1,1) %s float2(2,2)) %s float2(1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec3 literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 result;
  result = (vec3(1,1,1) %s vec3(2,2,2)) %s vec3(1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  var_1_0=(float3(1,1,1) %s float3(2,2,2)) %s float3(1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 result;
  result = (vec3(1,1,1) %s vec3(2,2,2)) %s vec3(1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  var_1_0=(float3(1,1,1) %s float3(2,2,2)) %s float3(1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Two vec4 literals">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 result;
  result = (vec4(1,1,1,1) %s vec4(2,2,2,2)) %s vec4(1,1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  var_1_0=(float4(1,1,1,1) %s float4(2,2,2,2)) %s float4(1,1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 result;
  result = (vec4(1,1,1,1) %s vec4(2,2,2,2)) %s vec4(1,1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  var_1_0=(float4(1,1,1,1) %s float4(2,2,2,2)) %s float4(1,1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo;
  int result;
  result = (1 %s foo) %s 1;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=(1 %s var_1_0) %s 1;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo;
  int result;
  result = (1 %s foo) %s 1;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=(1 %s var_1_0) %s 1;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo;
  float result;
  result = (1.0 %s foo) %s 1.0;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=(1.000000e+000 %s var_1_0) %s 1.000000e+000;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo;
  float result;
  result = (1.0 %s foo) %s 1.0;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=(1.000000e+000 %s var_1_0) %s 1.000000e+000;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Vec2 literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo;
  vec2 result;
  result = (vec2(1,1) %s foo) %s vec2(1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=(float2(1,1) %s var_1_0) %s float2(1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo;
  vec2 result;
  result = (vec2(1,1) %s foo) %s vec2(1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=(float2(1,1) %s var_1_0) %s float2(1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec3 literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo;
  vec3 result;
  result = (vec3(1,1,1) %s foo) %s vec3(1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=(float3(1,1,1) %s var_1_0) %s float3(1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo;
  vec3 result;
  result = (vec3(1,1,1) %s foo) %s vec3(1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=(float3(1,1,1) %s var_1_0) %s float3(1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec4 literal and variable">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo;
  vec4 result;
  result = (vec4(1,1,1,1) %s foo) %s vec4(1,1,1,1);
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=(float4(1,1,1,1) %s var_1_0) %s float4(1,1,1,1);
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo;
  vec4 result;
  result = (vec4(1,1,1,1) %s foo) %s vec4(1,1,1,1);
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=(float4(1,1,1,1) %s var_1_0) %s float4(1,1,1,1);
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Integer variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  int foo;
  int result;
  result = (foo %s 1) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=(var_1_0 %s 1) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  int foo;
  int result;
  result = (foo %s 1) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  int var_1_0=0;
  int var_1_1=0;
  var_1_1=(var_1_0 %s 1) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Float variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  float foo;
  float result;
  result = (foo %s 1.0) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=(var_1_0 %s 1.000000e+000) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  float foo;
  float result;
  result = (foo %s 1.0) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float var_1_0=0.0;
  float var_1_1=0.0;
  var_1_1=(var_1_0 %s 1.000000e+000) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="Vec2 variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec2 foo;
  vec2 result;
  result = (foo %s vec2(1,1)) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=(var_1_0 %s float2(1,1)) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec2 foo;
  vec2 result;
  result = (foo %s vec2(1,1)) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float2 var_1_0=0.0;
  float2 var_1_1=0.0;
  var_1_1=(var_1_0 %s float2(1,1)) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec3 variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec3 foo;
  vec3 result;
  result = (foo %s vec3(1,1,1)) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=(var_1_0 %s float3(1,1,1)) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec3 foo;
  vec3 result;
  result = (foo %s vec3(1,1,1)) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float3 var_1_0=0.0;
  float3 var_1_1=0.0;
  var_1_1=(var_1_0 %s float3(1,1,1)) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
    <Row Description="vec4 variable and literal">
      <Parameter Name="FragmentGLSL">
<![CDATA[
precision mediump float;
void main() 
{
  vec4 foo;
  vec4 result;
  result = (foo %s vec4(1,1,1,1)) %s foo;
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="FragmentHLSL">
<![CDATA[
struct PSInput
{
float4 position : SV_Position;
};
struct PSOutput
{
float4 fragColor[1] : SV_Target;
};
void main(in PSInput psInputArg,out PSOutput psOutputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=(var_1_0 %s float4(1,1,1,1)) %s var_1_0;
  psOutput.fragColor[0]=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
      <Parameter Name="VertexGLSL">
<![CDATA[
void main()
{
  vec4 foo;
  vec4 result;
  result = (foo %s vec4(1,1,1,1)) %s foo;
  gl_Position = vec4(0.0, 0.0, 0.0, 0.0);
}
]]>
      </Parameter>
      <Parameter Name="VertexHLSL">
<![CDATA[
struct PSInput
{
  float4 position : SV_Position;
};
struct VSInput
{
};
void main(in VSInput vsInputArg,out PSInput psInputOut)
{
  float4 var_1_0=0.0;
  float4 var_1_1=0.0;
  var_1_1=(var_1_0 %s float4(1,1,1,1)) %s var_1_0;
  flippedPosition=float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
}
]]>
      </Parameter>
    </Row>
  </Table>
</Data>
